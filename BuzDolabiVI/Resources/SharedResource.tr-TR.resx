<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ad Soyad" xml:space="preserve">
    <value>Ad Soyad</value>
  </data>
  <data name="Adet" xml:space="preserve">
    <value>Adet</value>
  </data>
  <data name="Ana Sayfa" xml:space="preserve">
    <value>Ana Sayfa</value>
  </data>
  <data name="ANA YEMEK KATEGORİSİ" xml:space="preserve">
    <value>ANA YEMEK KATEGORİSİ</value>
  </data>
  <data name="Ana Yemek Tarifleri" xml:space="preserve">
    <value>Ana Yemek Tarifleri</value>
  </data>
  <data name="BESİN DEĞERİ LİNKİ GİRİNİZ." xml:space="preserve">
    <value>BESİN DEĞERİ LİNKİ GİRİNİZ.</value>
  </data>
  <data name="Cinsiyetinizi Giriniz" xml:space="preserve">
    <value>Cinsiyetinizi Giriniz</value>
  </data>
  <data name="Dakika" xml:space="preserve">
    <value>Dakika</value>
  </data>
  <data name="Dil" xml:space="preserve">
    <value>Dil</value>
  </data>
  <data name="E-posta onayını yeniden gönder" xml:space="preserve">
    <value>E-posta onayını yeniden gönder</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Fotoğraf Seçiniz." xml:space="preserve">
    <value>Fotoğraf Seçiniz.</value>
  </data>
  <data name="Giriş Yap" xml:space="preserve">
    <value>Giriş Yap</value>
  </data>
  <data name="Hazırlama Süresi" xml:space="preserve">
    <value>Hazırlama Süresi</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>İçerik</value>
  </data>
  <data name="Kategori Seçiniz." xml:space="preserve">
    <value>Kategori Seçiniz.</value>
  </data>
  <data name="Kayıt Ol" xml:space="preserve">
    <value>Kayıt Ol</value>
  </data>
  <data name="KAÇ KALORİ BULUNMAKTA?" xml:space="preserve">
    <value>KAÇ KALORİ BULUNMAKTA?</value>
  </data>
  <data name="Kaç Kişilik?" xml:space="preserve">
    <value>Kaç Kişilik?</value>
  </data>
  <data name="Kişi" xml:space="preserve">
    <value>Kişi</value>
  </data>
  <data name="ONAYA GÖNDER" xml:space="preserve">
    <value>ONAYA GÖNDER</value>
  </data>
  <data name="Pişirme Süresi" xml:space="preserve">
    <value>Pişirme Süresi</value>
  </data>
  <data name="Saat" xml:space="preserve">
    <value>Saat</value>
  </data>
  <data name="Servis" xml:space="preserve">
    <value>Servis</value>
  </data>
  <data name="Sosyal Medya Linkinizi Giriniz" xml:space="preserve">
    <value>Sosyal Medya Linkinizi Giriniz</value>
  </data>
  <data name="Tarif Ekle" xml:space="preserve">
    <value>Tarif Ekle</value>
  </data>
  <data name="Tarif Nasıl Yapılır?" xml:space="preserve">
    <value>Tarif Nasıl Yapılır?</value>
  </data>
  <data name="Tarif Onayları" xml:space="preserve">
    <value>Tarif Onayları</value>
  </data>
  <data name="Tarif İçin Gerekli Malzemeler virgül ile ayırınız." xml:space="preserve">
    <value>Tarif İçin Gerekli Malzemeler virgül ile ayırınız.</value>
  </data>
  <data name="Tarifiniz hakkında kısa fikir verin." xml:space="preserve">
    <value>Tarifiniz hakkında kısa fikir verin.</value>
  </data>
  <data name="Tarifinizi Başlığını Giriniz." xml:space="preserve">
    <value>Tarifinizi Başlığını Giriniz.</value>
  </data>
  <data name="Tarifler" xml:space="preserve">
    <value>Tarifler</value>
  </data>
  <data name="TATLI KATEGORİSİ" xml:space="preserve">
    <value>TATLI KATEGORİSİ</value>
  </data>
  <data name="Tatlı Tarifleri" xml:space="preserve">
    <value>Tatlı Tarifleri</value>
  </data>
  <data name="Yeni bir hesap oluştur." xml:space="preserve">
    <value>Yeni bir hesap oluştur.</value>
  </data>
  <data name="Yeni bir kullanıcı olarak kayıt ol." xml:space="preserve">
    <value>Yeni bir kullanıcı olarak kayıt ol.</value>
  </data>
  <data name="Yorum Api" xml:space="preserve">
    <value>Yorum Api</value>
  </data>
  <data name="Yorum Onayları" xml:space="preserve">
    <value>Yorum Onayları</value>
  </data>
  <data name="Yönetici" xml:space="preserve">
    <value>Yönetici</value>
  </data>
  <data name="ÇORBA KATEGORİSİ" xml:space="preserve">
    <value>ÇORBA KATEGORİSİ</value>
  </data>
  <data name="Çorba Tarifleri" xml:space="preserve">
    <value>Çorba Tarifleri</value>
  </data>
  <data name="Çıkış Yap" xml:space="preserve">
    <value>Çıkış Yap</value>
  </data>
  <data name="Özlü Söz Giriniz" xml:space="preserve">
    <value>Özlü Söz Giriniz</value>
  </data>
  <data name="İÇECEK KATEGORİSİ" xml:space="preserve">
    <value>İÇECEK KATEGORİSİ</value>
  </data>
  <data name="İçecek Tarifleri" xml:space="preserve">
    <value>İçecek Tarifleri</value>
  </data>
  <data name="Şifre" xml:space="preserve">
    <value>Şifre</value>
  </data>
  <data name="Şifreni mi unuttun?" xml:space="preserve">
    <value>Şifreni mi unuttun?</value>
  </data>
  <data name="Şifrenizi Doğrulayınız" xml:space="preserve">
    <value>Şifrenizi Doğrulayınız</value>
  </data>
</root>